{% extends "base.njk" %}

{% block title %}All Shows{% endblock %}

{% block content %}
<div class="table-wrapper">
<div id="letter-bar" style="margin-top: 20px; font-size: 14px;"></div>
<div id="band-dropdown-wrapper" style="margin-top: 10px; margin-bottom: 20px; display: none; font-size: 14px;">
  <label for="band-dropdown" style="margin-right: 8px;">Filter by band:</label>
  <select id="band-dropdown">...</select>
</div>
<table id="shows-table">
  <thead>
    <tr>
      <th>Artist</th>
      <th>Date</th>
      <th>Location</th>
	  <th>Venue</th>
      <th>Length</th>
      <th>Format</th>
      <th>Type</th>
      <th>Source</th>
      <th>Taper(s)</th>
      <th>Images</th>
      <th>Page</th>
    </tr>
  </thead>
  <tbody>
    {% for show in shows | sort(attribute='startDateUnix') %}
    <tr data-band="{{ show.bands[0] }}">
      <td>
        {% if show.bands %}
          {{ show.bands | join(", ") }}
        {% else %}
          ‚Äî
        {% endif %}
      </td>
      <td>
        {% if show.startDateUnix %}
          {{ show.startDateUnix | date("yyyy-MM-dd") }}
        {% else %}
          ‚Äî
        {% endif %}
      </td>
	  <td>
	    {% if show.location %}
	    	{{ show.location.city or "" }}{% if show.location.state %}, {{ show.location.state }}{% endif %}, {{ show.location.country or "" }}
	    {% else %}
	    	‚Äî
	    {% endif %}
	  </td>
	  <td>
	    {{ show.location.venue or "‚Äî" }}
	  </td>
      <td>
        {% if show.specs and show.specs.length %}
          {{ show.specs.length | formatTime }}
        {% else %}
          ‚Äî
        {% endif %}
      </td>
      <td>
        {% if show.specs and show.specs.sourceDetail %}
          {{ show.specs.sourceDetail.fileFormat or "‚Äî" }}
        {% else %}
          ‚Äî
        {% endif %}
      </td>
      <td>
        {% if show.specs and show.specs.sourceDetail %}
          {{ show.specs.sourceDetail.recordingType or "‚Äî" }}
        {% else %}
          ‚Äî
        {% endif %}
      </td>
      <td>
        <div class="source-wrapper">
          {{ show.source or "‚Äî" }}
          {% if show.fileSlug and show.fileSlug.includes('show_1') %}
            <span class="show-label label-show1">Show 1</span>
          {% elif show.fileSlug and show.fileSlug.includes('show_2') %}
            <span class="show-label label-show2">Show 2</span>
          {% endif %}
        </div>
      </td>
      <td>
        {% if show.tapers %}
          {{ show.tapers | join(", ") }}
        {% else %}
          ‚Äî
        {% endif %}
      </td>
	  <td>
	  {% if show.images %}
		{% for img in show.images.slice(0, 4) %}
		<img src="https://drive.google.com/thumbnail?id={{ img.externalId }}&sz=w32"
			alt="thumb"
			width="32"
			height="auto"
			style="margin-right: 4px; cursor: pointer; border-radius: 4px;"
			onclick='openModal("{{ img.externalId }}", {{ show.images | dump | safe }})'>
		{% endfor %}
	  {% else %}
	  	‚Äî
	  {% endif %}
	  </td>

      <td>
        <a href="/shows/{{ show.fileSlug }}/" title="View">üîó</a>
      </td>
    </tr>
    {% endfor %}
  </tbody>
</table>

<script>
  let currentLetter = 'all';
  const tableRows = [...document.querySelectorAll('#shows-table tbody tr')];
  const letterBar = document.getElementById('letter-bar');

  // Extract first letters
  const letters = new Set();
  tableRows.forEach(row => {
    const band = row.dataset.band || '';
    const first = band[0]?.toUpperCase();
    if (first) letters.add(/^[A-Z]$/.test(first) ? first : '#');
  });

  const sorted = Array.from(letters).sort();
  const barHTML = ['<strong>Filter:</strong> <a href="#" data-letter="all">ALL</a>']
    .concat(sorted.map(l => `<a href="#" data-letter="${l}">${l}</a>`))
    .join(' | ');

  letterBar.innerHTML = barHTML;

  letterBar.addEventListener('click', e => {
    if (e.target.tagName !== 'A') return;
    e.preventDefault();
  
    const selected = e.target.dataset.letter;
	currentLetter = selected;
    updateDropdown(selected);
  
    dropdown.selectedIndex = 0; // Reset to "‚Äî Select band ‚Äî"
  
    // Filter by letter only
    tableRows.forEach(row => {
      const band = row.dataset.band || '';
      const first = band[0]?.toUpperCase();
      const isNumber = !/^[A-Z]/.test(first);
      const match = selected === 'all' ||
                    (selected === '#' && isNumber) ||
                    (first === selected);
      row.style.display = match ? '' : 'none';
    });
  
    updateShowCount();
  });

  const dropdownWrapper = document.getElementById("band-dropdown-wrapper");
  const dropdown = document.getElementById("band-dropdown");
  
  function updateDropdown(letter) {
    const bandMap = new Map();
  
    tableRows.forEach(row => {
      const band = row.dataset.band || '';
      const first = band[0]?.toUpperCase();
      const cell = row.querySelector('td');
      const display = cell ? cell.innerText.trim() : '';
  
      if (
        (letter === 'all') ||
        (letter === '#' && !/^[A-Z]/.test(first)) ||
        (first === letter)
      ) {
        if (band && display) bandMap.set(band, display);
      }
    });
  
    const sortedBands = Array.from(bandMap.entries()).sort((a, b) =>
      a[1].localeCompare(b[1])
    );
  
	dropdown.innerHTML =
	`<option value="" disabled selected>‚Äî Select band ‚Äî</option>` +
	sortedBands.map(([key, label]) =>
		`<option value="${label}">${label}</option>`
	).join('');
  
    dropdownWrapper.style.display = sortedBands.length ? 'block' : 'none';
  }
  dropdown.addEventListener("change", () => {
    const selectedBand = dropdown.value;
    if (!selectedBand) return;
  
    tableRows.forEach(row => {
      const band = row.dataset.band || '';
      const first = band[0]?.toUpperCase();
      const isNumber = !/^[A-Z]/.test(first);
  
      const matchLetter =
        currentLetter === 'all' ||
        (currentLetter === '#' && isNumber) ||
        first === currentLetter;
  
      const matchBand = band.toLowerCase() === selectedBand.toLowerCase();
  
      row.style.display = matchLetter && matchBand ? '' : 'none';
    });
  
    updateShowCount();
  });

</script>

<!-- Modal for image preview -->
<div id="imageModal" style="display:none; position:fixed; top:0; left:0; width:100vw; height:100vh; background-color:rgba(0,0,0,0.7); z-index:1000; align-items:center; justify-content:center;">
  <div style="position:relative; width:90%; height:90%;">
    <span onclick="closeModal()" style="position:absolute; top:11px; right:60px; font-size:2rem; color:white; background-color:rgba(0,0,0,0.6); padding:1px 10px; border-radius:4px; cursor:pointer;">√ó</span>
	<button id="modalPrev" style="position:absolute; left:10px; top:50%; transform:translateY(-50%); font-size:2rem; background:rgba(0,0,0,0.6); color:white; border:none; padding:8px 12px; cursor:pointer;">‚Üê</button>
	<button id="modalNext" style="position:absolute; right:10px; top:50%; transform:translateY(-50%); font-size:2rem; background:rgba(0,0,0,0.6); color:white; border:none; padding:8px 12px; cursor:pointer;">‚Üí</button>
    <iframe id="modalImage" style="width:100%; height:100%; border:none; border-radius:0px;"></iframe>
  </div>
</div>

<script>
  let currentImages = [];
  let currentIndex = 0;

  function openModal(id, images = []) {
    currentImages = images;
    currentIndex = images.findIndex(img => img.externalId === id);
    showImageAt(currentIndex);
    document.getElementById('imageModal').style.display = 'flex';
  }

  function showImageAt(index) {
  const img = currentImages[index];
  if (!img) return;
  
  const iframe = document.getElementById('modalImage');
  iframe.src = `https://drive.google.com/file/d/${img.externalId}/preview`;
  
  // Show/hide arrows
  document.getElementById('modalPrev').style.display = index > 0 ? 'block' : 'none';
  document.getElementById('modalNext').style.display = index < currentImages.length - 1 ? 'block' : 'none';
  }

  function closeModal() {
    document.getElementById('imageModal').style.display = 'none';
    document.getElementById('modalImage').src = '';
    currentImages = [];
    currentIndex = 0;
  }

  function nextImage() {
    if (currentIndex < currentImages.length - 1) {
      currentIndex++;
      showImageAt(currentIndex);
    }
  }

  function prevImage() {
    if (currentIndex > 0) {
      currentIndex--;
      showImageAt(currentIndex);
    }
  }

  function updateShowCount() {
    const visible = tableRows.filter(row => row.style.display !== 'none');
    document.getElementById('show-count').textContent = `Shows: ${visible.length}`;
  }

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') closeModal();
    if (e.key === 'ArrowRight') nextImage();
    if (e.key === 'ArrowLeft') prevImage();
  });

  document.getElementById('modalNext').onclick = nextImage;
  document.getElementById('modalPrev').onclick = prevImage;
</script>

</div>
<p id="show-count" style="font-size: 14px;">Shows: {{ shows | length }}</p>
{% endblock %}