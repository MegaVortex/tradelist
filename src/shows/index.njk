{% extends "base.njk" %}
{% block title %}All Shows{% endblock %}
{% block content %}
   <div class="table-wrapper">
      <div id="letter-bar" class="letter-bar"></div>
      <div id="band-pills" class="d-flex flex-wrap gap-2 justify-content-center my-2" style="display:none;"></div>
   </div>
   <p id="show-count" class="show-counter">
      ðŸŽ« Shows:
      <span id="show-count-number">0</span>
   </p>
   <div id="grouping-hint" style="display:none; font-size: 11px; color: #555; margin-bottom: 10px;"></div>
   <table id="shows-table">
      <thead>
         <tr>
            <th>Artist</th>
            <th>Date</th>
            <th>Location</th>
            <th>Length</th>
            <th>Size</th>
            <th>Format</th>
            <th>Type</th>
            <th>Source</th>
            <th>Taper(s)</th>
            <th>Pics</th>
            <th>Page</th>
            <th>ðŸ›’</th>
            {% if environment == "dev" %}
               <th>Edit</th>
            {% endif %}
         </tr>
      </thead>
<tbody id="shows-table-body">
  <tr><td colspan="12" style="text-align: center;">Loading showsâ€¦</td></tr>
</tbody>
   </table>
   <script src="{{ '/scripts/clusterize.min.js' | url }}"></script>
   {% include "modals/json-editor-modal.njk" %}
   <script src="{{ '/scripts/json-editor.js' | url }}"></script>
   <div id="pagination-controls" class="my-3"></div>
   <script src="{{ '/scripts/hammer.min.js' | url }}"></script>
   {% include "modals/cart-modal.njk" %}
   {% include "modals/image-modal.njk" %}
   <script src="{{ '/scripts/cart.js' | url }}"></script>
   <script src="{{ '/scripts/shows-table.js' | url }}"></script>
   <script src="{{ '/scripts/image-modal-viewer.js' | url }}"></script>
   <script src="{{ '/scripts/media-extras-toggle.js' | url }}"></script>
<script>
(async function () {
    const showCountSpan = document.getElementById('show-count-number');
    let shows = await getFromDB("allShowsData"); // From shows-table.js

    if (!shows || shows.length === 0) {
        console.log("Fetching initial shows...");
        shows = {{ allShowData.publicRegularShows | dump | safe }};
        await saveToDB("allShowsData", shows);
        console.log("âœ… Stored in IndexedDB");
    } else {
        console.log("âœ… Loaded from IndexedDB");
    }

    // Make the data globally available and initialize the table filter script
    window.allShowsData = shows;
    showCountSpan.textContent = shows.length; // Set initial total count

    // This function is defined in the new shows-filter.js
    initializeShowFilters(window.allShowsData); 
})();
</script>


</div>
{% endblock %}